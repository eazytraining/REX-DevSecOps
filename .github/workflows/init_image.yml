---
name: Build Base Image
on:
  push:
    branches: [hashicorp]
    paths: ['packer/**']
  workflow_dispatch:

jobs:
  build-base:
    runs-on: ubuntu-latest
    outputs:
      image-id: ${{ steps.build.outputs.image-id }}
      image-name: ${{ steps.build.outputs.image-name }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "1.9.4"
      
      - name: Build Base Image
        id: build
        run: |
          cd packer/init_image
          packer init .
          packer build .
          
          # Récupérer l'ID de l'image (exemple AWS)
          IMAGE_ID=$(jq -r '.builds[0].custom_data.image_id' manifest.json)
          IMAGE_NAME=$(jq -r '.builds[0].custom_data.image_name' manifest.json)
          
          echo "image-id=$IMAGE_ID" >> $GITHUB_OUTPUT
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PACKER_GITHUB_API_TOKEN: ${{ secrets.PACKER_GITHUB_API_TOKEN }}
      
      - name: Upload manifest
        uses: actions/upload-artifact@v4
        with:
          name: base-manifest
          path: packer/base/manifest.json
      - name: Trigger Docker Image Build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker_image.yml',
              ref: context.ref
            })

      - name: Trigger K3s Image Build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'k3s_image.yml',
              ref: context.ref
            })
